 and(not(A) , not(B))
 and(not(0) , not(0))
t: [and, (, not, (, 0, ), not, (, 0, ), )]
[and]
[and, (]
[and, (, not]
[and, (, not, (]
[and, (, not, (]
[and, (, not]
[and, (, not, not]
[and, (, not, not, (]
[and, (, not, not, (]
[and, (, not, not]
Apply: [and, (, not, not]	stack = [false, false]
op = not	'A' = false	'!A' = true
Apply: [and, (, not]	stack = [false, true]
op = not	'A' = true	'!A' = false
[and]
FinalApply: [and]	stack = [false, false]
op = and	'A' = false	'B' = false	'A && B' = false
0
 and(not(A) , not(B))
 and(not(0) , not(1))
t: [and, (, not, (, 0, ), not, (, 1, ), )]
[and]
[and, (]
[and, (, not]
[and, (, not, (]
[and, (, not, (]
[and, (, not]
[and, (, not, not]
[and, (, not, not, (]
[and, (, not, not, (]
[and, (, not, not]
Apply: [and, (, not, not]	stack = [false, true]
op = not	'A' = true	'!A' = false
Apply: [and, (, not]	stack = [false, false]
op = not	'A' = false	'!A' = true
[and]
FinalApply: [and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(not(A) , not(B))
 and(not(1) , not(0))
t: [and, (, not, (, 1, ), not, (, 0, ), )]
[and]
[and, (]
[and, (, not]
[and, (, not, (]
[and, (, not, (]
[and, (, not]
[and, (, not, not]
[and, (, not, not, (]
[and, (, not, not, (]
[and, (, not, not]
Apply: [and, (, not, not]	stack = [true, false]
op = not	'A' = false	'!A' = true
Apply: [and, (, not]	stack = [true, true]
op = not	'A' = true	'!A' = false
[and]
FinalApply: [and]	stack = [true, false]
op = and	'A' = true	'B' = false	'A && B' = false
0
 and(not(A) , not(B))
 and(not(1) , not(1))
t: [and, (, not, (, 1, ), not, (, 1, ), )]
[and]
[and, (]
[and, (, not]
[and, (, not, (]
[and, (, not, (]
[and, (, not]
[and, (, not, not]
[and, (, not, not, (]
[and, (, not, not, (]
[and, (, not, not]
Apply: [and, (, not, not]	stack = [true, true]
op = not	'A' = true	'!A' = false
Apply: [and, (, not]	stack = [true, false]
op = not	'A' = false	'!A' = true
[and]
FinalApply: [and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 not(and(A , B))
 not(and(0 , 0))
t: [not, (, and, (, 0, 0, ), )]
[not]
[not, (]
[not, (, and]
[not, (, and, (]
[not, (, and, (]
[not, (, and, (]
[not, (, and]
Apply: [not, (, and]	stack = [false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[not]
FinalApply: [not]	stack = [false]
op = not	'A' = false	'!A' = true
1
 not(and(A , B))
 not(and(0 , 1))
t: [not, (, and, (, 0, 1, ), )]
[not]
[not, (]
[not, (, and]
[not, (, and, (]
[not, (, and, (]
[not, (, and, (]
[not, (, and]
Apply: [not, (, and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[not]
FinalApply: [not]	stack = [false]
op = not	'A' = false	'!A' = true
1
 not(and(A , B))
 not(and(1 , 0))
t: [not, (, and, (, 1, 0, ), )]
[not]
[not, (]
[not, (, and]
[not, (, and, (]
[not, (, and, (]
[not, (, and, (]
[not, (, and]
Apply: [not, (, and]	stack = [true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[not]
FinalApply: [not]	stack = [false]
op = not	'A' = false	'!A' = true
1
 not(and(A , B))
 not(and(1 , 1))
t: [not, (, and, (, 1, 1, ), )]
[not]
[not, (]
[not, (, and]
[not, (, and, (]
[not, (, and, (]
[not, (, and, (]
[not, (, and]
Apply: [not, (, and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[not]
FinalApply: [not]	stack = [true]
op = not	'A' = true	'!A' = false
0
 and(or(A , B) , not(and(B , C)))
 and(or(0 , 0) , not(and(0 , 0)))
t: [and, (, or, (, 0, 0, ), not, (, and, (, 0, 0, ), ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
[and, (, or, not]
[and, (, or, not, (]
[and, (, or, not, (, and]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and]
Apply: [and, (, or, not, (, and]	stack = [false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[and, (, or, not]
Apply: [and, (, or, not]	stack = [false, false, false]
op = not	'A' = false	'!A' = true
Apply: [and, (, or]	stack = [false, false, true]
op = or	'A' = false	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(or(A , B) , not(and(B , C)))
 and(or(0 , 0) , not(and(0 , 1)))
t: [and, (, or, (, 0, 0, ), not, (, and, (, 0, 1, ), ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
[and, (, or, not]
[and, (, or, not, (]
[and, (, or, not, (, and]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and]
Apply: [and, (, or, not, (, and]	stack = [false, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[and, (, or, not]
Apply: [and, (, or, not]	stack = [false, false, false]
op = not	'A' = false	'!A' = true
Apply: [and, (, or]	stack = [false, false, true]
op = or	'A' = false	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(or(A , B) , not(and(B , C)))
 and(or(0 , 1) , not(and(1 , 0)))
t: [and, (, or, (, 0, 1, ), not, (, and, (, 1, 0, ), ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
[and, (, or, not]
[and, (, or, not, (]
[and, (, or, not, (, and]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and]
Apply: [and, (, or, not, (, and]	stack = [false, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[and, (, or, not]
Apply: [and, (, or, not]	stack = [false, true, false]
op = not	'A' = false	'!A' = true
Apply: [and, (, or]	stack = [false, true, true]
op = or	'A' = true	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(or(A , B) , not(and(B , C)))
 and(or(0 , 1) , not(and(1 , 1)))
t: [and, (, or, (, 0, 1, ), not, (, and, (, 1, 1, ), ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
[and, (, or, not]
[and, (, or, not, (]
[and, (, or, not, (, and]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and]
Apply: [and, (, or, not, (, and]	stack = [false, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[and, (, or, not]
Apply: [and, (, or, not]	stack = [false, true, true]
op = not	'A' = true	'!A' = false
Apply: [and, (, or]	stack = [false, true, false]
op = or	'A' = true	'B' = false	A || B = true
[and]
FinalApply: [and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(or(A , B) , not(and(B , C)))
 and(or(1 , 0) , not(and(0 , 0)))
t: [and, (, or, (, 1, 0, ), not, (, and, (, 0, 0, ), ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
[and, (, or, not]
[and, (, or, not, (]
[and, (, or, not, (, and]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and]
Apply: [and, (, or, not, (, and]	stack = [true, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[and, (, or, not]
Apply: [and, (, or, not]	stack = [true, false, false]
op = not	'A' = false	'!A' = true
Apply: [and, (, or]	stack = [true, false, true]
op = or	'A' = false	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 and(or(A , B) , not(and(B , C)))
 and(or(1 , 0) , not(and(0 , 1)))
t: [and, (, or, (, 1, 0, ), not, (, and, (, 0, 1, ), ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
[and, (, or, not]
[and, (, or, not, (]
[and, (, or, not, (, and]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and]
Apply: [and, (, or, not, (, and]	stack = [true, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[and, (, or, not]
Apply: [and, (, or, not]	stack = [true, false, false]
op = not	'A' = false	'!A' = true
Apply: [and, (, or]	stack = [true, false, true]
op = or	'A' = false	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 and(or(A , B) , not(and(B , C)))
 and(or(1 , 1) , not(and(1 , 0)))
t: [and, (, or, (, 1, 1, ), not, (, and, (, 1, 0, ), ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
[and, (, or, not]
[and, (, or, not, (]
[and, (, or, not, (, and]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and]
Apply: [and, (, or, not, (, and]	stack = [true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[and, (, or, not]
Apply: [and, (, or, not]	stack = [true, true, false]
op = not	'A' = false	'!A' = true
Apply: [and, (, or]	stack = [true, true, true]
op = or	'A' = true	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 and(or(A , B) , not(and(B , C)))
 and(or(1 , 1) , not(and(1 , 1)))
t: [and, (, or, (, 1, 1, ), not, (, and, (, 1, 1, ), ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
[and, (, or, not]
[and, (, or, not, (]
[and, (, or, not, (, and]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and, (]
[and, (, or, not, (, and]
Apply: [and, (, or, not, (, and]	stack = [true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[and, (, or, not]
Apply: [and, (, or, not]	stack = [true, true, true]
op = not	'A' = true	'!A' = false
Apply: [and, (, or]	stack = [true, true, false]
op = or	'A' = true	'B' = false	A || B = true
[and]
FinalApply: [and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 and(A , or(B , C))
 and(0 , or(0 , 0))
t: [and, (, 0, or, (, 0, 0, ), )]
[and]
[and, (]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
Apply: [and, (, or]	stack = [false, false, false]
op = or	'A' = false	'B' = false	A || B = false
[and]
FinalApply: [and]	stack = [false, false]
op = and	'A' = false	'B' = false	'A && B' = false
0
 and(A , or(B , C))
 and(0 , or(0 , 1))
t: [and, (, 0, or, (, 0, 1, ), )]
[and]
[and, (]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
Apply: [and, (, or]	stack = [false, false, true]
op = or	'A' = false	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(A , or(B , C))
 and(0 , or(1 , 0))
t: [and, (, 0, or, (, 1, 0, ), )]
[and]
[and, (]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
Apply: [and, (, or]	stack = [false, true, false]
op = or	'A' = true	'B' = false	A || B = true
[and]
FinalApply: [and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(A , or(B , C))
 and(0 , or(1 , 1))
t: [and, (, 0, or, (, 1, 1, ), )]
[and]
[and, (]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
Apply: [and, (, or]	stack = [false, true, true]
op = or	'A' = true	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(A , or(B , C))
 and(1 , or(0 , 0))
t: [and, (, 1, or, (, 0, 0, ), )]
[and]
[and, (]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
Apply: [and, (, or]	stack = [true, false, false]
op = or	'A' = false	'B' = false	A || B = false
[and]
FinalApply: [and]	stack = [true, false]
op = and	'A' = true	'B' = false	'A && B' = false
0
 and(A , or(B , C))
 and(1 , or(0 , 1))
t: [and, (, 1, or, (, 0, 1, ), )]
[and]
[and, (]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
Apply: [and, (, or]	stack = [true, false, true]
op = or	'A' = false	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 and(A , or(B , C))
 and(1 , or(1 , 0))
t: [and, (, 1, or, (, 1, 0, ), )]
[and]
[and, (]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
Apply: [and, (, or]	stack = [true, true, false]
op = or	'A' = true	'B' = false	A || B = true
[and]
FinalApply: [and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 and(A , or(B , C))
 and(1 , or(1 , 1))
t: [and, (, 1, or, (, 1, 1, ), )]
[and]
[and, (]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or]
Apply: [and, (, or]	stack = [true, true, true]
op = or	'A' = true	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 or(and(A , B) , and(A , C))
 or(and(0 , 0) , and(0 , 0))
t: [or, (, and, (, 0, 0, ), and, (, 0, 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B) , and(A , C))
 or(and(0 , 0) , and(0 , 1))
t: [or, (, and, (, 0, 0, ), and, (, 0, 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and]	stack = [false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B) , and(A , C))
 or(and(0 , 1) , and(0 , 0))
t: [or, (, and, (, 0, 1, ), and, (, 0, 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B) , and(A , C))
 or(and(0 , 1) , and(0 , 1))
t: [or, (, and, (, 0, 1, ), and, (, 0, 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and]	stack = [false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B) , and(A , C))
 or(and(1 , 0) , and(1 , 0))
t: [or, (, and, (, 1, 0, ), and, (, 1, 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B) , and(A , C))
 or(and(1 , 0) , and(1 , 1))
t: [or, (, and, (, 1, 0, ), and, (, 1, 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and]	stack = [true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B) , and(A , C))
 or(and(1 , 1) , and(1 , 0))
t: [or, (, and, (, 1, 1, ), and, (, 1, 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B) , and(A , C))
 or(and(1 , 1) , and(1 , 1))
t: [or, (, and, (, 1, 1, ), and, (, 1, 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and]	stack = [true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or]
FinalApply: [or]	stack = [true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 or(and(A , B), and(A , C))
 or(and(0 , 0), and(0 , 0))
t: [or, (, and, (, 0, 0, ), and, (, 0, 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B), and(A , C))
 or(and(0 , 0), and(0 , 1))
t: [or, (, and, (, 0, 0, ), and, (, 0, 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and]	stack = [false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B), and(A , C))
 or(and(0 , 1), and(0 , 0))
t: [or, (, and, (, 0, 1, ), and, (, 0, 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B), and(A , C))
 or(and(0 , 1), and(0 , 1))
t: [or, (, and, (, 0, 1, ), and, (, 0, 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and]	stack = [false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B), and(A , C))
 or(and(1 , 0), and(1 , 0))
t: [or, (, and, (, 1, 0, ), and, (, 1, 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B), and(A , C))
 or(and(1 , 0), and(1 , 1))
t: [or, (, and, (, 1, 0, ), and, (, 1, 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and]	stack = [true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B), and(A , C))
 or(and(1 , 1), and(1 , 0))
t: [or, (, and, (, 1, 1, ), and, (, 1, 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B), and(A , C))
 or(and(1 , 1), and(1 , 1))
t: [or, (, and, (, 1, 1, ), and, (, 1, 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and]	stack = [true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or]
FinalApply: [or]	stack = [true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 or(A , and(B , C))
 or(0 , and(0 , 0))
t: [or, (, 0, and, (, 0, 0, ), )]
[or]
[or, (]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
Apply: [or, (, and]	stack = [false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(A , and(B , C))
 or(0 , and(0 , 1))
t: [or, (, 0, and, (, 0, 1, ), )]
[or]
[or, (]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
Apply: [or, (, and]	stack = [false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(A , and(B , C))
 or(0 , and(1 , 0))
t: [or, (, 0, and, (, 1, 0, ), )]
[or]
[or, (]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
Apply: [or, (, and]	stack = [false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(A , and(B , C))
 or(0 , and(1 , 1))
t: [or, (, 0, and, (, 1, 1, ), )]
[or]
[or, (]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
Apply: [or, (, and]	stack = [false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or]
FinalApply: [or]	stack = [false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(A , and(B , C))
 or(1 , and(0 , 0))
t: [or, (, 1, and, (, 0, 0, ), )]
[or]
[or, (]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
Apply: [or, (, and]	stack = [true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(A , and(B , C))
 or(1 , and(0 , 1))
t: [or, (, 1, and, (, 0, 1, ), )]
[or]
[or, (]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
Apply: [or, (, and]	stack = [true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(A , and(B , C))
 or(1 , and(1 , 0))
t: [or, (, 1, and, (, 1, 0, ), )]
[or]
[or, (]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
Apply: [or, (, and]	stack = [true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(A , and(B , C))
 or(1 , and(1 , 1))
t: [or, (, 1, and, (, 1, 1, ), )]
[or]
[or, (]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
Apply: [or, (, and]	stack = [true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or]
FinalApply: [or]	stack = [true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 or(or(A , B) , C) 
 or(or(0 , 0) , 0) 
t: [or, (, or, (, 0, 0, ), 0, )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (]
[or, (, or, (]
[or, (, or]
[or, (, or]
Apply: [or, (, or]	stack = [false, false, false]
op = or	'A' = false	'B' = false	A || B = false
[or]
FinalApply: [or]	stack = [false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(or(A , B) , C) 
 or(or(0 , 0) , 1) 
t: [or, (, or, (, 0, 0, ), 1, )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (]
[or, (, or, (]
[or, (, or]
[or, (, or]
Apply: [or, (, or]	stack = [false, false, true]
op = or	'A' = false	'B' = true	A || B = true
[or]
FinalApply: [or]	stack = [false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(or(A , B) , C) 
 or(or(0 , 1) , 0) 
t: [or, (, or, (, 0, 1, ), 0, )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (]
[or, (, or, (]
[or, (, or]
[or, (, or]
Apply: [or, (, or]	stack = [false, true, false]
op = or	'A' = true	'B' = false	A || B = true
[or]
FinalApply: [or]	stack = [false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(or(A , B) , C) 
 or(or(0 , 1) , 1) 
t: [or, (, or, (, 0, 1, ), 1, )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (]
[or, (, or, (]
[or, (, or]
[or, (, or]
Apply: [or, (, or]	stack = [false, true, true]
op = or	'A' = true	'B' = true	A || B = true
[or]
FinalApply: [or]	stack = [false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(or(A , B) , C) 
 or(or(1 , 0) , 0) 
t: [or, (, or, (, 1, 0, ), 0, )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (]
[or, (, or, (]
[or, (, or]
[or, (, or]
Apply: [or, (, or]	stack = [true, false, false]
op = or	'A' = false	'B' = false	A || B = false
[or]
FinalApply: [or]	stack = [true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(or(A , B) , C) 
 or(or(1 , 0) , 1) 
t: [or, (, or, (, 1, 0, ), 1, )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (]
[or, (, or, (]
[or, (, or]
[or, (, or]
Apply: [or, (, or]	stack = [true, false, true]
op = or	'A' = false	'B' = true	A || B = true
[or]
FinalApply: [or]	stack = [true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 or(or(A , B) , C) 
 or(or(1 , 1) , 0) 
t: [or, (, or, (, 1, 1, ), 0, )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (]
[or, (, or, (]
[or, (, or]
[or, (, or]
Apply: [or, (, or]	stack = [true, true, false]
op = or	'A' = true	'B' = false	A || B = true
[or]
FinalApply: [or]	stack = [true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 or(or(A , B) , C) 
 or(or(1 , 1) , 1) 
t: [or, (, or, (, 1, 1, ), 1, )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (]
[or, (, or, (]
[or, (, or]
[or, (, or]
Apply: [or, (, or]	stack = [true, true, true]
op = or	'A' = true	'B' = true	A || B = true
[or]
FinalApply: [or]	stack = [true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 or(and(A , B , C) , and(or(A , B) , C))
 or(and(0 , 0 , 0) , and(or(0 , 0) , 0))
t: [or, (, and, (, 0, 0, 0, ), and, (, or, (, 0, 0, ), 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or]
Apply: [or, (, and, and, (, or]	stack = [false, false, false, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(or(A , B) , C))
 or(and(0 , 0 , 1) , and(or(0 , 0) , 1))
t: [or, (, and, (, 0, 0, 1, ), and, (, or, (, 0, 0, ), 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or]
Apply: [or, (, and, and, (, or]	stack = [false, false, true, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, false, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and]	stack = [false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(or(A , B) , C))
 or(and(0 , 1 , 0) , and(or(0 , 1) , 0))
t: [or, (, and, (, 0, 1, 0, ), and, (, or, (, 0, 1, ), 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or]
Apply: [or, (, and, and, (, or]	stack = [false, true, false, false, true, false]
op = or	'A' = true	'B' = false	A || B = true
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, true, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and]	stack = [false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B , C) , and(or(A , B) , C))
 or(and(0 , 1 , 1) , and(or(0 , 1) , 1))
t: [or, (, and, (, 0, 1, 1, ), and, (, or, (, 0, 1, ), 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or]
Apply: [or, (, and, and, (, or]	stack = [false, true, true, false, true, true]
op = or	'A' = true	'B' = true	A || B = true
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, true, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and]	stack = [false, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B , C) , and(or(A , B) , C))
 or(and(1 , 0 , 0) , and(or(1 , 0) , 0))
t: [or, (, and, (, 1, 0, 0, ), and, (, or, (, 1, 0, ), 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or]
Apply: [or, (, and, and, (, or]	stack = [true, false, false, true, false, false]
op = or	'A' = false	'B' = false	A || B = false
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [true, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(or(A , B) , C))
 or(and(1 , 0 , 1) , and(or(1 , 0) , 1))
t: [or, (, and, (, 1, 0, 1, ), and, (, or, (, 1, 0, ), 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or]
Apply: [or, (, and, and, (, or]	stack = [true, false, true, true, false, true]
op = or	'A' = false	'B' = true	A || B = true
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, false, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and]	stack = [true, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or]
FinalApply: [or]	stack = [true, false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(and(A , B , C) , and(or(A , B) , C))
 or(and(1 , 1 , 0) , and(or(1 , 1) , 0))
t: [or, (, and, (, 1, 1, 0, ), and, (, or, (, 1, 1, ), 0, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or]
Apply: [or, (, and, and, (, or]	stack = [true, true, false, true, true, false]
op = or	'A' = true	'B' = false	A || B = true
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, true, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and]	stack = [true, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[or]
FinalApply: [or]	stack = [true, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B , C) , and(or(A , B) , C))
 or(and(1 , 1 , 1) , and(or(1 , 1) , 1))
t: [or, (, and, (, 1, 1, 1, ), and, (, or, (, 1, 1, ), 1, ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or, (]
[or, (, and, and, (, or]
[or, (, and, and, (, or]
Apply: [or, (, and, and, (, or]	stack = [true, true, true, true, true, true]
op = or	'A' = true	'B' = true	A || B = true
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and]	stack = [true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or]
FinalApply: [or]	stack = [true, true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 or(and(A , B , C) , and(A , not(B) , C) , and(not(A) , not(B) , C) , and(not(A) , not(B) , not(C)))
 or(and(0 , 0 , 0) , and(0 , not(0) , 0) , and(not(0) , not(0) , 0) , and(not(0) , not(0) , not(0)))
t: [or, (, and, (, 0, 0, 0, ), and, (, 0, not, (, 0, ), 0, ), and, (, not, (, 0, ), not, (, 0, ), 0, ), and, (, not, (, 0, ), not, (, 0, ), not, (, 0, ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not]
Apply: [or, (, and, and, (, not]	stack = [false, false, false, false, false, false]
op = not	'A' = false	'!A' = true
[or, (, and, and]
[or, (, and, and, and]
[or, (, and, and, and, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not]
Apply: [or, (, and, and, and, (, not, not]	stack = [false, false, false, false, false, true, false, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, (, not]	stack = [false, false, false, false, false, true, false, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, and]
[or, (, and, and, and, and]
[or, (, and, and, and, and, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, not]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not]
Apply: [or, (, and, and, and, and, (, not, not, not]	stack = [false, false, false, false, false, true, false, false, false, false, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, and, (, not, not]	stack = [false, false, false, false, false, true, false, false, false, false, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, and, (, not]	stack = [false, false, false, false, false, true, false, false, false, false, false, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, and, and]
Apply: [or, (, and, and, and, and]	stack = [false, false, false, false, false, true, false, false, false, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and, and, and]	stack = [false, false, false, false, false, true, false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and, and]	stack = [false, false, false, false, false, true, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, false, false, false, false, true, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false, false, false, false, true, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(A , not(B) , C) , and(not(A) , not(B) , C) , and(not(A) , not(B) , not(C)))
 or(and(0 , 0 , 1) , and(0 , not(0) , 1) , and(not(0) , not(0) , 1) , and(not(0) , not(0) , not(1)))
t: [or, (, and, (, 0, 0, 1, ), and, (, 0, not, (, 0, ), 1, ), and, (, not, (, 0, ), not, (, 0, ), 1, ), and, (, not, (, 0, ), not, (, 0, ), not, (, 1, ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not]
Apply: [or, (, and, and, (, not]	stack = [false, false, true, false, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and]
[or, (, and, and, and]
[or, (, and, and, and, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not]
Apply: [or, (, and, and, and, (, not, not]	stack = [false, false, true, false, false, false, false, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, (, not]	stack = [false, false, true, false, false, false, false, false, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, and]
[or, (, and, and, and, and]
[or, (, and, and, and, and, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, not]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not]
Apply: [or, (, and, and, and, and, (, not, not, not]	stack = [false, false, true, false, false, false, false, false, true, false, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, and, (, not, not]	stack = [false, false, true, false, false, false, false, false, true, false, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, and, (, not]	stack = [false, false, true, false, false, false, false, false, true, false, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, and, and]
Apply: [or, (, and, and, and, and]	stack = [false, false, true, false, false, false, false, false, true, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and, and, and]	stack = [false, false, true, false, false, false, false, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and, and]	stack = [false, false, true, false, false, false, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, false, true, false, false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false, true, false, false, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(A , not(B) , C) , and(not(A) , not(B) , C) , and(not(A) , not(B) , not(C)))
 or(and(0 , 1 , 0) , and(0 , not(1) , 0) , and(not(0) , not(1) , 0) , and(not(0) , not(1) , not(0)))
t: [or, (, and, (, 0, 1, 0, ), and, (, 0, not, (, 1, ), 0, ), and, (, not, (, 0, ), not, (, 1, ), 0, ), and, (, not, (, 0, ), not, (, 1, ), not, (, 0, ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not]
Apply: [or, (, and, and, (, not]	stack = [false, true, false, false, true, false]
op = not	'A' = false	'!A' = true
[or, (, and, and]
[or, (, and, and, and]
[or, (, and, and, and, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not]
Apply: [or, (, and, and, and, (, not, not]	stack = [false, true, false, false, true, true, false, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, (, not]	stack = [false, true, false, false, true, true, false, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, and]
[or, (, and, and, and, and]
[or, (, and, and, and, and, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, not]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not]
Apply: [or, (, and, and, and, and, (, not, not, not]	stack = [false, true, false, false, true, true, false, true, false, false, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, and, (, not, not]	stack = [false, true, false, false, true, true, false, true, false, false, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, and, (, not]	stack = [false, true, false, false, true, true, false, true, false, false, true, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, and, and]
Apply: [or, (, and, and, and, and]	stack = [false, true, false, false, true, true, false, true, false, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and, and, and]	stack = [false, true, false, false, true, true, false, true, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and, and]	stack = [false, true, false, false, true, true, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, true, false, false, true, true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, true, false, false, true, true, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(A , not(B) , C) , and(not(A) , not(B) , C) , and(not(A) , not(B) , not(C)))
 or(and(0 , 1 , 1) , and(0 , not(1) , 1) , and(not(0) , not(1) , 1) , and(not(0) , not(1) , not(1)))
t: [or, (, and, (, 0, 1, 1, ), and, (, 0, not, (, 1, ), 1, ), and, (, not, (, 0, ), not, (, 1, ), 1, ), and, (, not, (, 0, ), not, (, 1, ), not, (, 1, ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not]
Apply: [or, (, and, and, (, not]	stack = [false, true, true, false, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and]
[or, (, and, and, and]
[or, (, and, and, and, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not]
Apply: [or, (, and, and, and, (, not, not]	stack = [false, true, true, false, true, false, false, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, (, not]	stack = [false, true, true, false, true, false, false, true, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, and]
[or, (, and, and, and, and]
[or, (, and, and, and, and, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, not]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not]
Apply: [or, (, and, and, and, and, (, not, not, not]	stack = [false, true, true, false, true, false, false, true, true, false, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, and, (, not, not]	stack = [false, true, true, false, true, false, false, true, true, false, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, and, (, not]	stack = [false, true, true, false, true, false, false, true, true, false, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, and, and]
Apply: [or, (, and, and, and, and]	stack = [false, true, true, false, true, false, false, true, true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and, and, and]	stack = [false, true, true, false, true, false, false, true, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and, and]	stack = [false, true, true, false, true, false, false, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, true, true, false, true, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, true, true, false, true, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(A , not(B) , C) , and(not(A) , not(B) , C) , and(not(A) , not(B) , not(C)))
 or(and(1 , 0 , 0) , and(1 , not(0) , 0) , and(not(1) , not(0) , 0) , and(not(1) , not(0) , not(0)))
t: [or, (, and, (, 1, 0, 0, ), and, (, 1, not, (, 0, ), 0, ), and, (, not, (, 1, ), not, (, 0, ), 0, ), and, (, not, (, 1, ), not, (, 0, ), not, (, 0, ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not]
Apply: [or, (, and, and, (, not]	stack = [true, false, false, true, false, false]
op = not	'A' = false	'!A' = true
[or, (, and, and]
[or, (, and, and, and]
[or, (, and, and, and, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not]
Apply: [or, (, and, and, and, (, not, not]	stack = [true, false, false, true, false, true, true, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, (, not]	stack = [true, false, false, true, false, true, true, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, and]
[or, (, and, and, and, and]
[or, (, and, and, and, and, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, not]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not]
Apply: [or, (, and, and, and, and, (, not, not, not]	stack = [true, false, false, true, false, true, true, false, false, true, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, and, (, not, not]	stack = [true, false, false, true, false, true, true, false, false, true, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, and, (, not]	stack = [true, false, false, true, false, true, true, false, false, true, false, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, and, and]
Apply: [or, (, and, and, and, and]	stack = [true, false, false, true, false, true, true, false, false, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and, and, and]	stack = [true, false, false, true, false, true, true, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and, and]	stack = [true, false, false, true, false, true, true, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [true, false, false, true, false, true, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false, false, true, false, true, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B , C) , and(A , not(B) , C) , and(not(A) , not(B) , C) , and(not(A) , not(B) , not(C)))
 or(and(1 , 0 , 1) , and(1 , not(0) , 1) , and(not(1) , not(0) , 1) , and(not(1) , not(0) , not(1)))
t: [or, (, and, (, 1, 0, 1, ), and, (, 1, not, (, 0, ), 1, ), and, (, not, (, 1, ), not, (, 0, ), 1, ), and, (, not, (, 1, ), not, (, 0, ), not, (, 1, ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not]
Apply: [or, (, and, and, (, not]	stack = [true, false, true, true, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and]
[or, (, and, and, and]
[or, (, and, and, and, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not]
Apply: [or, (, and, and, and, (, not, not]	stack = [true, false, true, true, false, false, true, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, (, not]	stack = [true, false, true, true, false, false, true, false, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, and]
[or, (, and, and, and, and]
[or, (, and, and, and, and, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, not]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not]
Apply: [or, (, and, and, and, and, (, not, not, not]	stack = [true, false, true, true, false, false, true, false, true, true, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, and, (, not, not]	stack = [true, false, true, true, false, false, true, false, true, true, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, and, (, not]	stack = [true, false, true, true, false, false, true, false, true, true, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, and, and]
Apply: [or, (, and, and, and, and]	stack = [true, false, true, true, false, false, true, false, true, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and, and, and]	stack = [true, false, true, true, false, false, true, false, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and, and]	stack = [true, false, true, true, false, false, true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [true, false, true, true, false, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false, true, true, false, false, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B , C) , and(A , not(B) , C) , and(not(A) , not(B) , C) , and(not(A) , not(B) , not(C)))
 or(and(1 , 1 , 0) , and(1 , not(1) , 0) , and(not(1) , not(1) , 0) , and(not(1) , not(1) , not(0)))
t: [or, (, and, (, 1, 1, 0, ), and, (, 1, not, (, 1, ), 0, ), and, (, not, (, 1, ), not, (, 1, ), 0, ), and, (, not, (, 1, ), not, (, 1, ), not, (, 0, ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not]
Apply: [or, (, and, and, (, not]	stack = [true, true, false, true, true, false]
op = not	'A' = false	'!A' = true
[or, (, and, and]
[or, (, and, and, and]
[or, (, and, and, and, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not]
Apply: [or, (, and, and, and, (, not, not]	stack = [true, true, false, true, true, true, true, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, (, not]	stack = [true, true, false, true, true, true, true, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, and]
[or, (, and, and, and, and]
[or, (, and, and, and, and, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, not]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not]
Apply: [or, (, and, and, and, and, (, not, not, not]	stack = [true, true, false, true, true, true, true, true, false, true, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, and, (, not, not]	stack = [true, true, false, true, true, true, true, true, false, true, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, and, (, not]	stack = [true, true, false, true, true, true, true, true, false, true, true, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, and, and]
Apply: [or, (, and, and, and, and]	stack = [true, true, false, true, true, true, true, true, false, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and, and, and]	stack = [true, true, false, true, true, true, true, true, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and, and]	stack = [true, true, false, true, true, true, true, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and]	stack = [true, true, false, true, true, true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, true, false, true, true, true, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B , C) , and(A , not(B) , C) , and(not(A) , not(B) , C) , and(not(A) , not(B) , not(C)))
 or(and(1 , 1 , 1) , and(1 , not(1) , 1) , and(not(1) , not(1) , 1) , and(not(1) , not(1) , not(1)))
t: [or, (, and, (, 1, 1, 1, ), and, (, 1, not, (, 1, ), 1, ), and, (, not, (, 1, ), not, (, 1, ), 1, ), and, (, not, (, 1, ), not, (, 1, ), not, (, 1, ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not]
Apply: [or, (, and, and, (, not]	stack = [true, true, true, true, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and]
[or, (, and, and, and]
[or, (, and, and, and, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not, (]
[or, (, and, and, and, (, not]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not, (]
[or, (, and, and, and, (, not, not]
[or, (, and, and, and, (, not, not]
Apply: [or, (, and, and, and, (, not, not]	stack = [true, true, true, true, true, false, true, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, (, not]	stack = [true, true, true, true, true, false, true, true, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, and]
[or, (, and, and, and, and]
[or, (, and, and, and, and, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not, (]
[or, (, and, and, and, and, (, not]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not, (]
[or, (, and, and, and, and, (, not, not]
[or, (, and, and, and, and, (, not, not, not]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not, (]
[or, (, and, and, and, and, (, not, not, not]
Apply: [or, (, and, and, and, and, (, not, not, not]	stack = [true, true, true, true, true, false, true, true, true, true, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, and, and, (, not, not]	stack = [true, true, true, true, true, false, true, true, true, true, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, and, and, (, not]	stack = [true, true, true, true, true, false, true, true, true, true, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, and, and]
Apply: [or, (, and, and, and, and]	stack = [true, true, true, true, true, false, true, true, true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and, and, and]	stack = [true, true, true, true, true, false, true, true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and, and]	stack = [true, true, true, true, true, false, true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [true, true, true, true, true, false, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, true, true, true, true, false, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(not(A) , B , and(A , B , not(C)))
 or(not(0) , 0 , and(0 , 0 , not(0)))
t: [or, (, not, (, 0, ), 0, and, (, 0, 0, not, (, 0, ), ), )]
[or]
[or, (]
[or, (, not]
[or, (, not, (]
[or, (, not, (]
[or, (, not]
[or, (, not]
[or, (, not, and]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (, not]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not]
Apply: [or, (, not, and, (, not]	stack = [false, false, false, false, false]
op = not	'A' = false	'!A' = true
[or, (, not, and]
Apply: [or, (, not, and]	stack = [false, false, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, not]	stack = [false, false, false, false]
op = not	'A' = false	'!A' = true
[or]
FinalApply: [or]	stack = [false, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(not(A) , B , and(A , B , not(C)))
 or(not(0) , 0 , and(0 , 0 , not(1)))
t: [or, (, not, (, 0, ), 0, and, (, 0, 0, not, (, 1, ), ), )]
[or]
[or, (]
[or, (, not]
[or, (, not, (]
[or, (, not, (]
[or, (, not]
[or, (, not]
[or, (, not, and]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (, not]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not]
Apply: [or, (, not, and, (, not]	stack = [false, false, false, false, true]
op = not	'A' = true	'!A' = false
[or, (, not, and]
Apply: [or, (, not, and]	stack = [false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, not]	stack = [false, false, false, false]
op = not	'A' = false	'!A' = true
[or]
FinalApply: [or]	stack = [false, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(not(A) , B , and(A , B , not(C)))
 or(not(0) , 1 , and(0 , 1 , not(0)))
t: [or, (, not, (, 0, ), 1, and, (, 0, 1, not, (, 0, ), ), )]
[or]
[or, (]
[or, (, not]
[or, (, not, (]
[or, (, not, (]
[or, (, not]
[or, (, not]
[or, (, not, and]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (, not]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not]
Apply: [or, (, not, and, (, not]	stack = [false, true, false, true, false]
op = not	'A' = false	'!A' = true
[or, (, not, and]
Apply: [or, (, not, and]	stack = [false, true, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, not]	stack = [false, true, false, true]
op = not	'A' = true	'!A' = false
[or]
FinalApply: [or]	stack = [false, true, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(not(A) , B , and(A , B , not(C)))
 or(not(0) , 1 , and(0 , 1 , not(1)))
t: [or, (, not, (, 0, ), 1, and, (, 0, 1, not, (, 1, ), ), )]
[or]
[or, (]
[or, (, not]
[or, (, not, (]
[or, (, not, (]
[or, (, not]
[or, (, not]
[or, (, not, and]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (, not]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not]
Apply: [or, (, not, and, (, not]	stack = [false, true, false, true, true]
op = not	'A' = true	'!A' = false
[or, (, not, and]
Apply: [or, (, not, and]	stack = [false, true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, not]	stack = [false, true, false, false]
op = not	'A' = false	'!A' = true
[or]
FinalApply: [or]	stack = [false, true, false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(not(A) , B , and(A , B , not(C)))
 or(not(1) , 0 , and(1 , 0 , not(0)))
t: [or, (, not, (, 1, ), 0, and, (, 1, 0, not, (, 0, ), ), )]
[or]
[or, (]
[or, (, not]
[or, (, not, (]
[or, (, not, (]
[or, (, not]
[or, (, not]
[or, (, not, and]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (, not]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not]
Apply: [or, (, not, and, (, not]	stack = [true, false, true, false, false]
op = not	'A' = false	'!A' = true
[or, (, not, and]
Apply: [or, (, not, and]	stack = [true, false, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, not]	stack = [true, false, true, false]
op = not	'A' = false	'!A' = true
[or]
FinalApply: [or]	stack = [true, false, true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 or(not(A) , B , and(A , B , not(C)))
 or(not(1) , 0 , and(1 , 0 , not(1)))
t: [or, (, not, (, 1, ), 0, and, (, 1, 0, not, (, 1, ), ), )]
[or]
[or, (]
[or, (, not]
[or, (, not, (]
[or, (, not, (]
[or, (, not]
[or, (, not]
[or, (, not, and]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (, not]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not]
Apply: [or, (, not, and, (, not]	stack = [true, false, true, false, true]
op = not	'A' = true	'!A' = false
[or, (, not, and]
Apply: [or, (, not, and]	stack = [true, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, not]	stack = [true, false, true, false]
op = not	'A' = false	'!A' = true
[or]
FinalApply: [or]	stack = [true, false, true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 or(not(A) , B , and(A , B , not(C)))
 or(not(1) , 1 , and(1 , 1 , not(0)))
t: [or, (, not, (, 1, ), 1, and, (, 1, 1, not, (, 0, ), ), )]
[or]
[or, (]
[or, (, not]
[or, (, not, (]
[or, (, not, (]
[or, (, not]
[or, (, not]
[or, (, not, and]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (, not]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not]
Apply: [or, (, not, and, (, not]	stack = [true, true, true, true, false]
op = not	'A' = false	'!A' = true
[or, (, not, and]
Apply: [or, (, not, and]	stack = [true, true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, not]	stack = [true, true, true, true]
op = not	'A' = true	'!A' = false
[or]
FinalApply: [or]	stack = [true, true, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(not(A) , B , and(A , B , not(C)))
 or(not(1) , 1 , and(1 , 1 , not(1)))
t: [or, (, not, (, 1, ), 1, and, (, 1, 1, not, (, 1, ), ), )]
[or]
[or, (]
[or, (, not]
[or, (, not, (]
[or, (, not, (]
[or, (, not]
[or, (, not]
[or, (, not, and]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (]
[or, (, not, and, (, not]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not, (]
[or, (, not, and, (, not]
Apply: [or, (, not, and, (, not]	stack = [true, true, true, true, true]
op = not	'A' = true	'!A' = false
[or, (, not, and]
Apply: [or, (, not, and]	stack = [true, true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, not]	stack = [true, true, true, false]
op = not	'A' = false	'!A' = true
[or]
FinalApply: [or]	stack = [true, true, true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 and(or(A , B , not(C)) , or(B , C) , or(not(A) , C))
 and(or(0 , 0 , not(0)) , or(0 , 0) , or(not(0) , 0))
t: [and, (, or, (, 0, 0, not, (, 0, ), ), or, (, 0, 0, ), or, (, not, (, 0, ), 0, ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (, not]
[and, (, or, (, not, (]
[and, (, or, (, not, (]
[and, (, or, (, not]
Apply: [and, (, or, (, not]	stack = [false, false, false]
op = not	'A' = false	'!A' = true
[and, (, or]
[and, (, or, or]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or]
[and, (, or, or, or]
[and, (, or, or, or, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not]
Apply: [and, (, or, or, or, (, not]	stack = [false, false, true, false, false, false, false]
op = not	'A' = false	'!A' = true
[and, (, or, or, or]
Apply: [and, (, or, or, or]	stack = [false, false, true, false, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
Apply: [and, (, or, or]	stack = [false, false, true, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
Apply: [and, (, or]	stack = [false, false, true, false, true]
op = or	'A' = false	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [false, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 and(or(A , B , not(C)) , or(B , C) , or(not(A) , C))
 and(or(0 , 0 , not(1)) , or(0 , 1) , or(not(0) , 1))
t: [and, (, or, (, 0, 0, not, (, 1, ), ), or, (, 0, 1, ), or, (, not, (, 0, ), 1, ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (, not]
[and, (, or, (, not, (]
[and, (, or, (, not, (]
[and, (, or, (, not]
Apply: [and, (, or, (, not]	stack = [false, false, true]
op = not	'A' = true	'!A' = false
[and, (, or]
[and, (, or, or]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or]
[and, (, or, or, or]
[and, (, or, or, or, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not]
Apply: [and, (, or, or, or, (, not]	stack = [false, false, false, false, true, false, true]
op = not	'A' = true	'!A' = false
[and, (, or, or, or]
Apply: [and, (, or, or, or]	stack = [false, false, false, false, true, false, false]
op = or	'A' = false	'B' = false	A || B = false
Apply: [and, (, or, or]	stack = [false, false, false, false, true, false]
op = or	'A' = true	'B' = false	A || B = true
Apply: [and, (, or]	stack = [false, false, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [false, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(or(A , B , not(C)) , or(B , C) , or(not(A) , C))
 and(or(0 , 1 , not(0)) , or(1 , 0) , or(not(0) , 0))
t: [and, (, or, (, 0, 1, not, (, 0, ), ), or, (, 1, 0, ), or, (, not, (, 0, ), 0, ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (, not]
[and, (, or, (, not, (]
[and, (, or, (, not, (]
[and, (, or, (, not]
Apply: [and, (, or, (, not]	stack = [false, true, false]
op = not	'A' = false	'!A' = true
[and, (, or]
[and, (, or, or]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or]
[and, (, or, or, or]
[and, (, or, or, or, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not]
Apply: [and, (, or, or, or, (, not]	stack = [false, true, true, true, false, false, false]
op = not	'A' = false	'!A' = true
[and, (, or, or, or]
Apply: [and, (, or, or, or]	stack = [false, true, true, true, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
Apply: [and, (, or, or]	stack = [false, true, true, true, false, true]
op = or	'A' = false	'B' = true	A || B = true
Apply: [and, (, or]	stack = [false, true, true, true, true]
op = or	'A' = true	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [false, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 and(or(A , B , not(C)) , or(B , C) , or(not(A) , C))
 and(or(0 , 1 , not(1)) , or(1 , 1) , or(not(0) , 1))
t: [and, (, or, (, 0, 1, not, (, 1, ), ), or, (, 1, 1, ), or, (, not, (, 0, ), 1, ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (, not]
[and, (, or, (, not, (]
[and, (, or, (, not, (]
[and, (, or, (, not]
Apply: [and, (, or, (, not]	stack = [false, true, true]
op = not	'A' = true	'!A' = false
[and, (, or]
[and, (, or, or]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or]
[and, (, or, or, or]
[and, (, or, or, or, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not]
Apply: [and, (, or, or, or, (, not]	stack = [false, true, false, true, true, false, true]
op = not	'A' = true	'!A' = false
[and, (, or, or, or]
Apply: [and, (, or, or, or]	stack = [false, true, false, true, true, false, false]
op = or	'A' = false	'B' = false	A || B = false
Apply: [and, (, or, or]	stack = [false, true, false, true, true, false]
op = or	'A' = true	'B' = false	A || B = true
Apply: [and, (, or]	stack = [false, true, false, true, true]
op = or	'A' = true	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [false, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(or(A , B , not(C)) , or(B , C) , or(not(A) , C))
 and(or(1 , 0 , not(0)) , or(0 , 0) , or(not(1) , 0))
t: [and, (, or, (, 1, 0, not, (, 0, ), ), or, (, 0, 0, ), or, (, not, (, 1, ), 0, ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (, not]
[and, (, or, (, not, (]
[and, (, or, (, not, (]
[and, (, or, (, not]
Apply: [and, (, or, (, not]	stack = [true, false, false]
op = not	'A' = false	'!A' = true
[and, (, or]
[and, (, or, or]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or]
[and, (, or, or, or]
[and, (, or, or, or, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not]
Apply: [and, (, or, or, or, (, not]	stack = [true, false, true, false, false, true, false]
op = not	'A' = false	'!A' = true
[and, (, or, or, or]
Apply: [and, (, or, or, or]	stack = [true, false, true, false, false, true, true]
op = or	'A' = true	'B' = true	A || B = true
Apply: [and, (, or, or]	stack = [true, false, true, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
Apply: [and, (, or]	stack = [true, false, true, false, true]
op = or	'A' = false	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [true, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 and(or(A , B , not(C)) , or(B , C) , or(not(A) , C))
 and(or(1 , 0 , not(1)) , or(0 , 1) , or(not(1) , 1))
t: [and, (, or, (, 1, 0, not, (, 1, ), ), or, (, 0, 1, ), or, (, not, (, 1, ), 1, ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (, not]
[and, (, or, (, not, (]
[and, (, or, (, not, (]
[and, (, or, (, not]
Apply: [and, (, or, (, not]	stack = [true, false, true]
op = not	'A' = true	'!A' = false
[and, (, or]
[and, (, or, or]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or]
[and, (, or, or, or]
[and, (, or, or, or, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not]
Apply: [and, (, or, or, or, (, not]	stack = [true, false, false, false, true, true, true]
op = not	'A' = true	'!A' = false
[and, (, or, or, or]
Apply: [and, (, or, or, or]	stack = [true, false, false, false, true, true, false]
op = or	'A' = true	'B' = false	A || B = true
Apply: [and, (, or, or]	stack = [true, false, false, false, true, true]
op = or	'A' = true	'B' = true	A || B = true
Apply: [and, (, or]	stack = [true, false, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [true, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 and(or(A , B , not(C)) , or(B , C) , or(not(A) , C))
 and(or(1 , 1 , not(0)) , or(1 , 0) , or(not(1) , 0))
t: [and, (, or, (, 1, 1, not, (, 0, ), ), or, (, 1, 0, ), or, (, not, (, 1, ), 0, ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (, not]
[and, (, or, (, not, (]
[and, (, or, (, not, (]
[and, (, or, (, not]
Apply: [and, (, or, (, not]	stack = [true, true, false]
op = not	'A' = false	'!A' = true
[and, (, or]
[and, (, or, or]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or]
[and, (, or, or, or]
[and, (, or, or, or, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not]
Apply: [and, (, or, or, or, (, not]	stack = [true, true, true, true, false, true, false]
op = not	'A' = false	'!A' = true
[and, (, or, or, or]
Apply: [and, (, or, or, or]	stack = [true, true, true, true, false, true, true]
op = or	'A' = true	'B' = true	A || B = true
Apply: [and, (, or, or]	stack = [true, true, true, true, false, true]
op = or	'A' = false	'B' = true	A || B = true
Apply: [and, (, or]	stack = [true, true, true, true, true]
op = or	'A' = true	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
1
 and(or(A , B , not(C)) , or(B , C) , or(not(A) , C))
 and(or(1 , 1 , not(1)) , or(1 , 1) , or(not(1) , 1))
t: [and, (, or, (, 1, 1, not, (, 1, ), ), or, (, 1, 1, ), or, (, not, (, 1, ), 1, ), )]
[and]
[and, (]
[and, (, or]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (]
[and, (, or, (, not]
[and, (, or, (, not, (]
[and, (, or, (, not, (]
[and, (, or, (, not]
Apply: [and, (, or, (, not]	stack = [true, true, true]
op = not	'A' = true	'!A' = false
[and, (, or]
[and, (, or, or]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or, (]
[and, (, or, or]
[and, (, or, or, or]
[and, (, or, or, or, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not, (]
[and, (, or, or, or, (, not]
[and, (, or, or, or, (, not]
Apply: [and, (, or, or, or, (, not]	stack = [true, true, false, true, true, true, true]
op = not	'A' = true	'!A' = false
[and, (, or, or, or]
Apply: [and, (, or, or, or]	stack = [true, true, false, true, true, true, false]
op = or	'A' = true	'B' = false	A || B = true
Apply: [and, (, or, or]	stack = [true, true, false, true, true, true]
op = or	'A' = true	'B' = true	A || B = true
Apply: [and, (, or]	stack = [true, true, false, true, true]
op = or	'A' = true	'B' = true	A || B = true
[and]
FinalApply: [and]	stack = [true, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
0
 or(or(and(not(and(A , B)) , not(C)) , and(not(A) , B , C) , and(A , B , C) , and(A , not(B) , not(C))) , and(A , not(B) , C))
 or(or(and(not(and(0 , 0)) , not(0)) , and(not(0) , 0 , 0) , and(0 , 0 , 0) , and(0 , not(0) , not(0))) , and(0 , not(0) , 0))
t: [or, (, or, (, and, (, not, (, and, (, 0, 0, ), ), not, (, 0, ), ), and, (, not, (, 0, ), 0, 0, ), and, (, 0, 0, 0, ), and, (, 0, not, (, 0, ), not, (, 0, ), ), ), and, (, 0, not, (, 0, ), 0, ), )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (, and]
[or, (, or, (, and, (]
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, (]
[or, (, or, (, and, (, not, (, and]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and]
Apply: [or, (, or, (, and, (, not, (, and]	stack = [false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, not]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not]
Apply: [or, (, or, (, and, (, not, not]	stack = [false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, or, (, and, (, not]	stack = [false, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and]
[or, (, or, (, and, and]
[or, (, or, (, and, and, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
Apply: [or, (, or, (, and, and, (, not]	stack = [false, false, false, false, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and, and]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, and]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, not]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not]
Apply: [or, (, or, (, and, and, and, and, (, not, not]	stack = [false, false, false, false, true, false, false, false, false, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, or, (, and, and, and, and, (, not]	stack = [false, false, false, false, true, false, false, false, false, false, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and, and, and, and]
Apply: [or, (, or, (, and, and, and, and]	stack = [false, false, false, false, true, false, false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or, (, and, and, and]	stack = [false, false, false, false, true, false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or, (, and, and]	stack = [false, false, false, false, true, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or, (, and]	stack = [false, false, false, false, true, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or, (, or]
[or, (, or, and]
[or, (, or, and, (]
[or, (, or, and, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not]
Apply: [or, (, or, and, (, not]	stack = [false, false, false, false, true, false, false, false, false, false]
op = not	'A' = false	'!A' = true
[or, (, or, and]
Apply: [or, (, or, and]	stack = [false, false, false, false, true, false, false, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, or]	stack = [false, false, false, false, true, false, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
[or]
FinalApply: [or]	stack = [false, false, false, false, true, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(or(and(not(and(A , B)) , not(C)) , and(not(A) , B , C) , and(A , B , C) , and(A , not(B) , not(C))) , and(A , not(B) , C))
 or(or(and(not(and(0 , 0)) , not(1)) , and(not(0) , 0 , 1) , and(0 , 0 , 1) , and(0 , not(0) , not(1))) , and(0 , not(0) , 1))
t: [or, (, or, (, and, (, not, (, and, (, 0, 0, ), ), not, (, 1, ), ), and, (, not, (, 0, ), 0, 1, ), and, (, 0, 0, 1, ), and, (, 0, not, (, 0, ), not, (, 1, ), ), ), and, (, 0, not, (, 0, ), 1, ), )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (, and]
[or, (, or, (, and, (]
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, (]
[or, (, or, (, and, (, not, (, and]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and]
Apply: [or, (, or, (, and, (, not, (, and]	stack = [false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, not]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not]
Apply: [or, (, or, (, and, (, not, not]	stack = [false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, or, (, and, (, not]	stack = [false, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and]
[or, (, or, (, and, and]
[or, (, or, (, and, and, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
Apply: [or, (, or, (, and, and, (, not]	stack = [false, true, false, false, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and, and]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, and]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, not]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not]
Apply: [or, (, or, (, and, and, and, and, (, not, not]	stack = [false, true, false, false, false, false, false, true, false, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, or, (, and, and, and, and, (, not]	stack = [false, true, false, false, false, false, false, true, false, false, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and, and, and, and]
Apply: [or, (, or, (, and, and, and, and]	stack = [false, true, false, false, false, false, false, true, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, or, (, and, and, and]	stack = [false, true, false, false, false, false, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or, (, and, and]	stack = [false, true, false, false, false, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, or, (, and]	stack = [false, true, false, false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or, (, or]
[or, (, or, and]
[or, (, or, and, (]
[or, (, or, and, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not]
Apply: [or, (, or, and, (, not]	stack = [false, true, false, false, false, false, false, false, false, true]
op = not	'A' = true	'!A' = false
[or, (, or, and]
Apply: [or, (, or, and]	stack = [false, true, false, false, false, false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or]	stack = [false, true, false, false, false, false, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
[or]
FinalApply: [or]	stack = [false, true, false, false, false, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(or(and(not(and(A , B)) , not(C)) , and(not(A) , B , C) , and(A , B , C) , and(A , not(B) , not(C))) , and(A , not(B) , C))
 or(or(and(not(and(0 , 1)) , not(0)) , and(not(0) , 1 , 0) , and(0 , 1 , 0) , and(0 , not(1) , not(0))) , and(0 , not(1) , 0))
t: [or, (, or, (, and, (, not, (, and, (, 0, 1, ), ), not, (, 0, ), ), and, (, not, (, 0, ), 1, 0, ), and, (, 0, 1, 0, ), and, (, 0, not, (, 1, ), not, (, 0, ), ), ), and, (, 0, not, (, 1, ), 0, ), )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (, and]
[or, (, or, (, and, (]
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, (]
[or, (, or, (, and, (, not, (, and]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and]
Apply: [or, (, or, (, and, (, not, (, and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, not]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not]
Apply: [or, (, or, (, and, (, not, not]	stack = [false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, or, (, and, (, not]	stack = [false, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and]
[or, (, or, (, and, and]
[or, (, or, (, and, and, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
Apply: [or, (, or, (, and, and, (, not]	stack = [false, false, false, true, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and, and]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, and]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, not]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not]
Apply: [or, (, or, (, and, and, and, and, (, not, not]	stack = [false, false, false, true, true, false, true, false, false, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, or, (, and, and, and, and, (, not]	stack = [false, false, false, true, true, false, true, false, false, true, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and, and, and, and]
Apply: [or, (, or, (, and, and, and, and]	stack = [false, false, false, true, true, false, true, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, or, (, and, and, and]	stack = [false, false, false, true, true, false, true, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or, (, and, and]	stack = [false, false, false, true, true, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or, (, and]	stack = [false, false, false, true, true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or, (, or]
[or, (, or, and]
[or, (, or, and, (]
[or, (, or, and, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not]
Apply: [or, (, or, and, (, not]	stack = [false, false, false, true, true, false, false, false, true, false]
op = not	'A' = false	'!A' = true
[or, (, or, and]
Apply: [or, (, or, and]	stack = [false, false, false, true, true, false, false, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, or]	stack = [false, false, false, true, true, false, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
[or]
FinalApply: [or]	stack = [false, false, false, true, true, false, false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(or(and(not(and(A , B)) , not(C)) , and(not(A) , B , C) , and(A , B , C) , and(A , not(B) , not(C))) , and(A , not(B) , C))
 or(or(and(not(and(0 , 1)) , not(1)) , and(not(0) , 1 , 1) , and(0 , 1 , 1) , and(0 , not(1) , not(1))) , and(0 , not(1) , 1))
t: [or, (, or, (, and, (, not, (, and, (, 0, 1, ), ), not, (, 1, ), ), and, (, not, (, 0, ), 1, 1, ), and, (, 0, 1, 1, ), and, (, 0, not, (, 1, ), not, (, 1, ), ), ), and, (, 0, not, (, 1, ), 1, ), )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (, and]
[or, (, or, (, and, (]
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, (]
[or, (, or, (, and, (, not, (, and]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and]
Apply: [or, (, or, (, and, (, not, (, and]	stack = [false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, not]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not]
Apply: [or, (, or, (, and, (, not, not]	stack = [false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, or, (, and, (, not]	stack = [false, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and]
[or, (, or, (, and, and]
[or, (, or, (, and, and, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
Apply: [or, (, or, (, and, and, (, not]	stack = [false, true, false, true, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and, and]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, and]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, not]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not]
Apply: [or, (, or, (, and, and, and, and, (, not, not]	stack = [false, true, false, true, false, false, true, true, false, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, or, (, and, and, and, and, (, not]	stack = [false, true, false, true, false, false, true, true, false, true, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and, and, and, and]
Apply: [or, (, or, (, and, and, and, and]	stack = [false, true, false, true, false, false, true, true, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, or, (, and, and, and]	stack = [false, true, false, true, false, false, true, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, or, (, and, and]	stack = [false, true, false, true, false, false, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, or, (, and]	stack = [false, true, false, true, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or, (, or]
[or, (, or, and]
[or, (, or, and, (]
[or, (, or, and, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not]
Apply: [or, (, or, and, (, not]	stack = [false, true, false, true, false, false, false, false, true, true]
op = not	'A' = true	'!A' = false
[or, (, or, and]
Apply: [or, (, or, and]	stack = [false, true, false, true, false, false, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, or]	stack = [false, true, false, true, false, false, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
[or]
FinalApply: [or]	stack = [false, true, false, true, false, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(or(and(not(and(A , B)) , not(C)) , and(not(A) , B , C) , and(A , B , C) , and(A , not(B) , not(C))) , and(A , not(B) , C))
 or(or(and(not(and(1 , 0)) , not(0)) , and(not(1) , 0 , 0) , and(1 , 0 , 0) , and(1 , not(0) , not(0))) , and(1 , not(0) , 0))
t: [or, (, or, (, and, (, not, (, and, (, 1, 0, ), ), not, (, 0, ), ), and, (, not, (, 1, ), 0, 0, ), and, (, 1, 0, 0, ), and, (, 1, not, (, 0, ), not, (, 0, ), ), ), and, (, 1, not, (, 0, ), 0, ), )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (, and]
[or, (, or, (, and, (]
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, (]
[or, (, or, (, and, (, not, (, and]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and]
Apply: [or, (, or, (, and, (, not, (, and]	stack = [true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, not]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not]
Apply: [or, (, or, (, and, (, not, not]	stack = [false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, or, (, and, (, not]	stack = [false, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and]
[or, (, or, (, and, and]
[or, (, or, (, and, and, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
Apply: [or, (, or, (, and, and, (, not]	stack = [false, false, true, false, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and, and]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, and]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, not]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not]
Apply: [or, (, or, (, and, and, and, and, (, not, not]	stack = [false, false, true, false, true, true, false, false, true, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, or, (, and, and, and, and, (, not]	stack = [false, false, true, false, true, true, false, false, true, false, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and, and, and, and]
Apply: [or, (, or, (, and, and, and, and]	stack = [false, false, true, false, true, true, false, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or, (, and, and, and]	stack = [false, false, true, false, true, true, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, or, (, and, and]	stack = [false, false, true, false, true, true, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or, (, and]	stack = [false, false, true, false, true, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or, (, or]
[or, (, or, and]
[or, (, or, and, (]
[or, (, or, and, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not]
Apply: [or, (, or, and, (, not]	stack = [false, false, true, false, true, true, false, true, false, false]
op = not	'A' = false	'!A' = true
[or, (, or, and]
Apply: [or, (, or, and]	stack = [false, false, true, false, true, true, false, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, or]	stack = [false, false, true, false, true, true, false, true, false]
op = or	'A' = true	'B' = false	A || B = true
[or]
FinalApply: [or]	stack = [false, false, true, false, true, true, false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(or(and(not(and(A , B)) , not(C)) , and(not(A) , B , C) , and(A , B , C) , and(A , not(B) , not(C))) , and(A , not(B) , C))
 or(or(and(not(and(1 , 0)) , not(1)) , and(not(1) , 0 , 1) , and(1 , 0 , 1) , and(1 , not(0) , not(1))) , and(1 , not(0) , 1))
t: [or, (, or, (, and, (, not, (, and, (, 1, 0, ), ), not, (, 1, ), ), and, (, not, (, 1, ), 0, 1, ), and, (, 1, 0, 1, ), and, (, 1, not, (, 0, ), not, (, 1, ), ), ), and, (, 1, not, (, 0, ), 1, ), )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (, and]
[or, (, or, (, and, (]
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, (]
[or, (, or, (, and, (, not, (, and]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and]
Apply: [or, (, or, (, and, (, not, (, and]	stack = [true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, not]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not]
Apply: [or, (, or, (, and, (, not, not]	stack = [false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, or, (, and, (, not]	stack = [false, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and]
[or, (, or, (, and, and]
[or, (, or, (, and, and, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
Apply: [or, (, or, (, and, and, (, not]	stack = [false, true, true, false, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and, and]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, and]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, not]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not]
Apply: [or, (, or, (, and, and, and, and, (, not, not]	stack = [false, true, true, false, false, true, false, true, true, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, or, (, and, and, and, and, (, not]	stack = [false, true, true, false, false, true, false, true, true, false, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and, and, and, and]
Apply: [or, (, or, (, and, and, and, and]	stack = [false, true, true, false, false, true, false, true, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, or, (, and, and, and]	stack = [false, true, true, false, false, true, false, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, or, (, and, and]	stack = [false, true, true, false, false, true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, or, (, and]	stack = [false, true, true, false, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or, (, or]
[or, (, or, and]
[or, (, or, and, (]
[or, (, or, and, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not]
Apply: [or, (, or, and, (, not]	stack = [false, true, true, false, false, true, false, true, false, true]
op = not	'A' = true	'!A' = false
[or, (, or, and]
Apply: [or, (, or, and]	stack = [false, true, true, false, false, true, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or]	stack = [false, true, true, false, false, true, false, true, false]
op = or	'A' = true	'B' = false	A || B = true
[or]
FinalApply: [or]	stack = [false, true, true, false, false, true, false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(or(and(not(and(A , B)) , not(C)) , and(not(A) , B , C) , and(A , B , C) , and(A , not(B) , not(C))) , and(A , not(B) , C))
 or(or(and(not(and(1 , 1)) , not(0)) , and(not(1) , 1 , 0) , and(1 , 1 , 0) , and(1 , not(1) , not(0))) , and(1 , not(1) , 0))
t: [or, (, or, (, and, (, not, (, and, (, 1, 1, ), ), not, (, 0, ), ), and, (, not, (, 1, ), 1, 0, ), and, (, 1, 1, 0, ), and, (, 1, not, (, 1, ), not, (, 0, ), ), ), and, (, 1, not, (, 1, ), 0, ), )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (, and]
[or, (, or, (, and, (]
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, (]
[or, (, or, (, and, (, not, (, and]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and]
Apply: [or, (, or, (, and, (, not, (, and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, not]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not]
Apply: [or, (, or, (, and, (, not, not]	stack = [true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, or, (, and, (, not]	stack = [true, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and]
[or, (, or, (, and, and]
[or, (, or, (, and, and, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
Apply: [or, (, or, (, and, and, (, not]	stack = [true, false, true, true, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and, and]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, and]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, not]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not]
Apply: [or, (, or, (, and, and, and, and, (, not, not]	stack = [true, false, true, true, true, true, true, false, true, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, or, (, and, and, and, and, (, not]	stack = [true, false, true, true, true, true, true, false, true, true, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and, and, and, and]
Apply: [or, (, or, (, and, and, and, and]	stack = [true, false, true, true, true, true, true, false, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, or, (, and, and, and]	stack = [true, false, true, true, true, true, true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, or, (, and, and]	stack = [true, false, true, true, true, true, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, or, (, and]	stack = [true, false, true, true, true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or, (, or]
[or, (, or, and]
[or, (, or, and, (]
[or, (, or, and, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not]
Apply: [or, (, or, and, (, not]	stack = [true, false, true, true, true, true, false, true, true, false]
op = not	'A' = false	'!A' = true
[or, (, or, and]
Apply: [or, (, or, and]	stack = [true, false, true, true, true, true, false, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, or]	stack = [true, false, true, true, true, true, false, true, true]
op = or	'A' = true	'B' = true	A || B = true
[or]
FinalApply: [or]	stack = [true, false, true, true, true, true, false, true]
op = or	'A' = false	'B' = true	A || B = true
1
 or(or(and(not(and(A , B)) , not(C)) , and(not(A) , B , C) , and(A , B , C) , and(A , not(B) , not(C))) , and(A , not(B) , C))
 or(or(and(not(and(1 , 1)) , not(1)) , and(not(1) , 1 , 1) , and(1 , 1 , 1) , and(1 , not(1) , not(1))) , and(1 , not(1) , 1))
t: [or, (, or, (, and, (, not, (, and, (, 1, 1, ), ), not, (, 1, ), ), and, (, not, (, 1, ), 1, 1, ), and, (, 1, 1, 1, ), and, (, 1, not, (, 1, ), not, (, 1, ), ), ), and, (, 1, not, (, 1, ), 1, ), )]
[or]
[or, (]
[or, (, or]
[or, (, or, (]
[or, (, or, (, and]
[or, (, or, (, and, (]
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, (]
[or, (, or, (, and, (, not, (, and]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and, (]
[or, (, or, (, and, (, not, (, and]
Apply: [or, (, or, (, and, (, not, (, and]	stack = [true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or, (, or, (, and, (, not]
[or, (, or, (, and, (, not, not]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not, (]
[or, (, or, (, and, (, not, not]
Apply: [or, (, or, (, and, (, not, not]	stack = [true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, or, (, and, (, not]	stack = [true, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and]
[or, (, or, (, and, and]
[or, (, or, (, and, and, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not, (]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
[or, (, or, (, and, and, (, not]
Apply: [or, (, or, (, and, and, (, not]	stack = [true, true, true, true, true]
op = not	'A' = true	'!A' = false
[or, (, or, (, and, and]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and, (]
[or, (, or, (, and, and, and]
[or, (, or, (, and, and, and, and]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not, (]
[or, (, or, (, and, and, and, and, (, not]
[or, (, or, (, and, and, and, and, (, not, not]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not, (]
[or, (, or, (, and, and, and, and, (, not, not]
Apply: [or, (, or, (, and, and, and, and, (, not, not]	stack = [true, true, true, true, false, true, true, true, true, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, or, (, and, and, and, and, (, not]	stack = [true, true, true, true, false, true, true, true, true, true, false]
op = not	'A' = false	'!A' = true
[or, (, or, (, and, and, and, and]
Apply: [or, (, or, (, and, and, and, and]	stack = [true, true, true, true, false, true, true, true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, or, (, and, and, and]	stack = [true, true, true, true, false, true, true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, or, (, and, and]	stack = [true, true, true, true, false, true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, or, (, and]	stack = [true, true, true, true, false, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or, (, or]
[or, (, or, and]
[or, (, or, and, (]
[or, (, or, and, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not, (]
[or, (, or, and, (, not]
[or, (, or, and, (, not]
Apply: [or, (, or, and, (, not]	stack = [true, true, true, true, false, true, true, true, true, true]
op = not	'A' = true	'!A' = false
[or, (, or, and]
Apply: [or, (, or, and]	stack = [true, true, true, true, false, true, true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, or]	stack = [true, true, true, true, false, true, true, true, false]
op = or	'A' = true	'B' = false	A || B = true
[or]
FinalApply: [or]	stack = [true, true, true, true, false, true, true, true]
op = or	'A' = true	'B' = true	A || B = true
1
 or(and(A , B , C) , and(A , not(B) , not(and(not(A) , not(C)))))
 or(and(0 , 0 , 0) , and(0 , not(0) , not(and(not(0) , not(0)))))
t: [or, (, and, (, 0, 0, 0, ), and, (, 0, not, (, 0, ), not, (, and, (, not, (, 0, ), not, (, 0, ), ), ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, not]
[or, (, and, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and]
[or, (, and, and, (, not, not, (, and, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, not]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not]
Apply: [or, (, and, and, (, not, not, (, and, (, not, not]	stack = [false, false, false, false, false, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, (, not, not, (, and, (, not]	stack = [false, false, false, false, false, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, (, not, not, (, and]
Apply: [or, (, and, and, (, not, not, (, and]	stack = [false, false, false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or, (, and, and, (, not, not]
Apply: [or, (, and, and, (, not, not]	stack = [false, false, false, false, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, (, not]	stack = [false, false, false, false, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, false, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(A , not(B) , not(and(not(A) , not(C)))))
 or(and(0 , 0 , 1) , and(0 , not(0) , not(and(not(0) , not(1)))))
t: [or, (, and, (, 0, 0, 1, ), and, (, 0, not, (, 0, ), not, (, and, (, not, (, 0, ), not, (, 1, ), ), ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, not]
[or, (, and, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and]
[or, (, and, and, (, not, not, (, and, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, not]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not]
Apply: [or, (, and, and, (, not, not, (, and, (, not, not]	stack = [false, false, true, false, false, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, (, not, not, (, and, (, not]	stack = [false, false, true, false, false, false, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, (, not, not, (, and]
Apply: [or, (, and, and, (, not, not, (, and]	stack = [false, false, true, false, false, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[or, (, and, and, (, not, not]
Apply: [or, (, and, and, (, not, not]	stack = [false, false, true, false, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, (, not]	stack = [false, false, true, false, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, false, true, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, false, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B , C) , and(A , not(B) , not(and(not(A) , not(C)))))
 or(and(0 , 1 , 0) , and(0 , not(1) , not(and(not(0) , not(0)))))
t: [or, (, and, (, 0, 1, 0, ), and, (, 0, not, (, 1, ), not, (, and, (, not, (, 0, ), not, (, 0, ), ), ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, not]
[or, (, and, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and]
[or, (, and, and, (, not, not, (, and, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, not]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not]
Apply: [or, (, and, and, (, not, not, (, and, (, not, not]	stack = [false, true, false, false, true, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, (, not, not, (, and, (, not]	stack = [false, true, false, false, true, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, (, not, not, (, and]
Apply: [or, (, and, and, (, not, not, (, and]	stack = [false, true, false, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or, (, and, and, (, not, not]
Apply: [or, (, and, and, (, not, not]	stack = [false, true, false, false, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, (, not]	stack = [false, true, false, false, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, true, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, true, false, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, true, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(A , not(B) , not(and(not(A) , not(C)))))
 or(and(0 , 1 , 1) , and(0 , not(1) , not(and(not(0) , not(1)))))
t: [or, (, and, (, 0, 1, 1, ), and, (, 0, not, (, 1, ), not, (, and, (, not, (, 0, ), not, (, 1, ), ), ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, not]
[or, (, and, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and]
[or, (, and, and, (, not, not, (, and, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, not]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not]
Apply: [or, (, and, and, (, not, not, (, and, (, not, not]	stack = [false, true, true, false, true, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, (, not, not, (, and, (, not]	stack = [false, true, true, false, true, false, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, (, not, not, (, and]
Apply: [or, (, and, and, (, not, not, (, and]	stack = [false, true, true, false, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
[or, (, and, and, (, not, not]
Apply: [or, (, and, and, (, not, not]	stack = [false, true, true, false, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, (, not]	stack = [false, true, true, false, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and]
Apply: [or, (, and, and]	stack = [false, true, true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [false, true, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [false, true, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B , C) , and(A , not(B) , not(and(not(A) , not(C)))))
 or(and(1 , 0 , 0) , and(1 , not(0) , not(and(not(1) , not(0)))))
t: [or, (, and, (, 1, 0, 0, ), and, (, 1, not, (, 0, ), not, (, and, (, not, (, 1, ), not, (, 0, ), ), ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, not]
[or, (, and, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and]
[or, (, and, and, (, not, not, (, and, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, not]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not]
Apply: [or, (, and, and, (, not, not, (, and, (, not, not]	stack = [true, false, false, true, false, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, (, not, not, (, and, (, not]	stack = [true, false, false, true, false, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, (, not, not, (, and]
Apply: [or, (, and, and, (, not, not, (, and]	stack = [true, false, false, true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or, (, and, and, (, not, not]
Apply: [or, (, and, and, (, not, not]	stack = [true, false, false, true, false, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, (, not]	stack = [true, false, false, true, false, true]
op = not	'A' = true	'!A' = false
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, false, false, true, false, false]
op = and	'A' = false	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [true, false, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(A , not(B) , not(and(not(A) , not(C)))))
 or(and(1 , 0 , 1) , and(1 , not(0) , not(and(not(1) , not(1)))))
t: [or, (, and, (, 1, 0, 1, ), and, (, 1, not, (, 0, ), not, (, and, (, not, (, 1, ), not, (, 1, ), ), ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, not]
[or, (, and, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and]
[or, (, and, and, (, not, not, (, and, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, not]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not]
Apply: [or, (, and, and, (, not, not, (, and, (, not, not]	stack = [true, false, true, true, false, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, (, not, not, (, and, (, not]	stack = [true, false, true, true, false, true, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, (, not, not, (, and]
Apply: [or, (, and, and, (, not, not, (, and]	stack = [true, false, true, true, false, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or, (, and, and, (, not, not]
Apply: [or, (, and, and, (, not, not]	stack = [true, false, true, true, false, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, (, not]	stack = [true, false, true, true, false, false]
op = not	'A' = false	'!A' = true
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, false, true, true, false, true]
op = and	'A' = false	'B' = true	'A && B' = false
Apply: [or, (, and]	stack = [true, false, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, false, true, false]
op = or	'A' = true	'B' = false	A || B = true
1
 or(and(A , B , C) , and(A , not(B) , not(and(not(A) , not(C)))))
 or(and(1 , 1 , 0) , and(1 , not(1) , not(and(not(1) , not(0)))))
t: [or, (, and, (, 1, 1, 0, ), and, (, 1, not, (, 1, ), not, (, and, (, not, (, 1, ), not, (, 0, ), ), ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, not]
[or, (, and, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and]
[or, (, and, and, (, not, not, (, and, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, not]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not]
Apply: [or, (, and, and, (, not, not, (, and, (, not, not]	stack = [true, true, false, true, true, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, (, not, not, (, and, (, not]	stack = [true, true, false, true, true, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and, (, not, not, (, and]
Apply: [or, (, and, and, (, not, not, (, and]	stack = [true, true, false, true, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or, (, and, and, (, not, not]
Apply: [or, (, and, and, (, not, not]	stack = [true, true, false, true, true, false]
op = not	'A' = false	'!A' = true
Apply: [or, (, and, and, (, not]	stack = [true, true, false, true, true, true]
op = not	'A' = true	'!A' = false
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, true, false, true, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
Apply: [or, (, and]	stack = [true, true, false, true, false]
op = and	'A' = true	'B' = false	'A && B' = false
[or]
FinalApply: [or]	stack = [true, true, false, false]
op = or	'A' = false	'B' = false	A || B = false
0
 or(and(A , B , C) , and(A , not(B) , not(and(not(A) , not(C)))))
 or(and(1 , 1 , 1) , and(1 , not(1) , not(and(not(1) , not(1)))))
t: [or, (, and, (, 1, 1, 1, ), and, (, 1, not, (, 1, ), not, (, and, (, not, (, 1, ), not, (, 1, ), ), ), ), )]
[or]
[or, (]
[or, (, and]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and, (]
[or, (, and]
[or, (, and, and]
[or, (, and, and, (]
[or, (, and, and, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not, (]
[or, (, and, and, (, not]
[or, (, and, and, (, not, not]
[or, (, and, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and]
[or, (, and, and, (, not, not, (, and, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not, (]
[or, (, and, and, (, not, not, (, and, (, not]
[or, (, and, and, (, not, not, (, and, (, not, not]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not, (]
[or, (, and, and, (, not, not, (, and, (, not, not]
Apply: [or, (, and, and, (, not, not, (, and, (, not, not]	stack = [true, true, true, true, true, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, (, not, not, (, and, (, not]	stack = [true, true, true, true, true, true, false]
op = not	'A' = false	'!A' = true
[or, (, and, and, (, not, not, (, and]
Apply: [or, (, and, and, (, not, not, (, and]	stack = [true, true, true, true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or, (, and, and, (, not, not]
Apply: [or, (, and, and, (, not, not]	stack = [true, true, true, true, true, true]
op = not	'A' = true	'!A' = false
Apply: [or, (, and, and, (, not]	stack = [true, true, true, true, true, false]
op = not	'A' = false	'!A' = true
[or, (, and, and]
Apply: [or, (, and, and]	stack = [true, true, true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
Apply: [or, (, and]	stack = [true, true, true, true, true]
op = and	'A' = true	'B' = true	'A && B' = true
[or]
FinalApply: [or]	stack = [true, true, true, true]
op = or	'A' = true	'B' = true	A || B = true
1


t: []
